{"version":3,"sources":["components/Body/Index.js","utils/API.js","config/fire.js","pages/Home.js","components/Login/index.js","pages/Login.js","App.js","serviceWorker.js","index.js","components/Body/images/overHeadPlant.png","components/Body/images/dry.png"],"names":["Body","props","react_default","a","createElement","onClick","color","className","logOut","id","dangerouslySetInnerHTML","__html","true","status","src","overHeadPlant","alt","Container","onDoubleClick","write","children","API","waterPlant","axios","get","timeWatered","obj","post","getDates","isPlantDry","saveNotes","notes","fetchNotes","deleteNote","note","delete","concat","mongo","savebackground","getbackground","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Home","state","dates","soil","automated","sketchTool","Tools","Pencil","_id","grid","x","y","w","h","minW","maxW","minH","maxH","i","title","getBackground","then","res","backgroundColor","data","pop","document","body","style","catch","err","console","log","saveBackground","event","_this","setState","Select","last","length","timeStamp","text","Object","toConsumableArray","onAdd","noteUpdate","onDelete","response","_ref","_Dates","forEach","day","num","moment","date","format","push","auth","signOut","this","setInterval","_this2","test","join","width","dry","react_stickies_default","isDraggable","isResizable","onChange","dist","window","innerWidth","height","innerHeight","tool","lineColor","lineWidth","Component","Logo","Password","assign","type","placeholder","Email","Left","Right","Inside","loginUser","signUp","Login","eml","password","invalidLogin","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","handleChange","_event$target","target","name","value","defineProperty","App","user","authListener","onAuthStateChanged","pages_Home","pages_Login","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.57c49a6b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport overHeadPlant from \"./images/overHeadPlant.png\";\nexport function Body(props) {\n  return (\n    <div>\n      <ul>\n        <li>Opt.\n          <ul>\n            <li>\n              <span onClick={() => props.color('green')} className=\"dot color1\"></span>\n              <span onClick={() => props.color('grey')} className=\"dot color2\"></span>\n              <span onClick={() => props.color('yellow')} className=\"dot color3\"></span>\n              <span onClick={() => props.color('pink')} className=\"dot color4\"></span>\n            </li>\n            <li onClick={() => props.logOut()}>LogOut</li>\n          </ul>\n        </li>\n      </ul>\n      <button id=\"logOut\" onClick={() => props.logOut()}></button>\n      <center className=\"header\">Quench</center>\n      <h4\n        className=\"text-white px-5 mx-5\"\n        dangerouslySetInnerHTML={{ __html: props.true }}\n      />\n      <center>{props.status}</center>\n      <img src={overHeadPlant} className=\"plant\" alt=\"plant\" />\n    </div>\n  );\n}\n\nexport function Container(props) {\n  return <div onDoubleClick={() => props.write()} className=\"container-fluid\">{props.children}</div>;\n}","import axios from \"axios\";\n\nexport default {\n  waterPlant: function() {\n    return axios.get(\"https://69.120.124.59:5050/buzz\");\n  },\n  timeWatered: function(obj) {\n    return axios.post(\"/api/water\", obj);\n  },\n  getDates: function() {\n    return axios.get(\"/api/water\");\n  },\n  isPlantDry: function() {\n    return axios.get(\"https://69.120.124.59:5050/sensor\");\n  },\n  saveNotes: function(notes) {\n    return axios.post(\"/api/notes\", notes);\n  },\n  fetchNotes: function() {\n    return axios.get(\"/api/notes\")\n  },\n  deleteNote: function(note) {\n    return axios.delete(`/api/notes/${note.mongo}/${note.note}`)\n  },\n  savebackground: function(color) {\n    return axios.post(`/api/color`, color)\n  },\n  getbackground: function(color) {\n    return axios.get(`/api/color`)\n  },\n};","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyA7FX5hrEStDVQQVmFeuT6eGLnhAE1Vv_I\",\n  authDomain: \"plantwater-60d84.firebaseapp.com\",\n  databaseURL: \"https://plantwater-60d84.firebaseio.com\",\n  projectId: \"plantwater-60d84\",\n  storageBucket: \"plantwater-60d84.appspot.com\",\n  messagingSenderId: \"123494582330\"\n};\nconst fire = firebase.initializeApp(config);\nexport default fire;","import React, { Component } from \"react\";\nimport { Body, Container } from \"../components/Body/Index\";\nimport API from \"../utils/API\";\nimport fire from \"../config/fire\";\nimport moment from \"moment\";\nimport dry from \"../components/Body/images/dry.png\";\nimport { SketchField, Tools } from \"react-sketch\";\nimport ReactStickies from \"react-stickies\";\n\nclass Home extends Component {\n  state = {\n    dates: [],\n    soil: \"DRY\",\n    automated: false,\n    sketchTool: Tools.Pencil,\n    _id: null,\n    notes: [\n      {\n        grid: {\n          x: 0,\n          y: 0,\n          w: 0,\n          h: 1,\n          minW: 0,\n          maxW: 0,\n          minH: 0,\n          maxH: 1,\n          i: \"123\"\n        },\n        id: \"123\",\n        title: \"Note\"\n      }\n    ]\n  };\n\n  // Component LIFE CYCLE //\n\n  componentDidMount() {\n    this.fetchNotes();\n    this.getBackground();\n    setInterval(this.soil, 30 * 1000);\n  }\n\n  componentWillUnmount() {\n    this.saveNotes();\n  }\n\n  // Component LIFE CYCLE //\n\n  // Background Color // \n  getBackground = () => {\n    API.getbackground() \n    .then((res) => {\n      const backgroundColor = res.data.pop()\n      document.body.style.backgroundColor = backgroundColor.color\n    })\n    .catch((err) => console.log(err))\n  }\n\n  saveBackground = () => {\n    const obj = {\n      color: document.body.style.backgroundColor \n    }\n\n    API.savebackground(obj).catch((err) => console.log(err))\n  }\n\n  backgroundColor = (event) => {\n    switch(event){\n      case 'green':\n      document.body.style.backgroundColor = 'rgb(196, 206, 196)'\n      break;\n      case 'yellow':\n      document.body.style.backgroundColor = 'rgb(144, 144, 41)'\n      break;\n      case 'grey':\n      document.body.style.backgroundColor = '#666'\n      break;\n      case 'pink':\n      document.body.style.backgroundColor = '#eec9d2'\n      break;\n      default:\n      document.body.style.backgroundColor = 'rgb(196, 206, 196)'\n    }\n\n    this.saveBackground()\n  }\n\n  // BackgroundColor\n\n  // Sketch on Background //\n\n  write = () => {\n    this.state.sketchTool === Tools.Pencil\n      ? this.setState({ sketchTool: Tools.Select })\n      : this.setState({ sketchTool: Tools.Pencil });\n  };\n\n  // Sketch on Background //\n\n\n  // NOTES //\n\n  fetchNotes = () => {\n    API.fetchNotes()\n    .then((res) => {\n      let last = res.data.pop()\n      this.setState({ _id: last._id })\n      for (var i=1; i < last.state.length; i++) {\n        const grid = {\n          grid: {\n            x: last.state[i].grid.x,\n            y: last.state[i].grid.y,\n            w: last.state[i].grid.w,\n            h: last.state[i].grid.h,\n            i: last.state[i].grid.i\n          },\n          color: last.state[i].color,\n          id: last.state[i].id,\n          timeStamp: last.state[i].timeStamp,\n          title: last.state[i].title,\n          text: last.state[i].text\n        };\n        this.setState({ notes: [...this.state.notes, grid] });\n      }\n    })\n    .catch((err) => console.log(err));\n  }\n\n  onAdd = note => {\n    \n    const grid = {\n      grid: {\n        x: note.grid.x,\n        y: note.grid.y,\n        w: note.grid.w,\n        h: 1,\n        minW: note.grid.minW,\n        maxW: note.grid.maxW,\n        minH: note.grid.minH,\n        maxH: note.grid.maxH,\n        i: note.grid.i\n      },\n      color: note.color,\n      id: note.id,\n      timeStamp: note.timeStamp,\n      title: note.title\n    };\n    console.log(grid)\n    this.setState({ notes: [...this.state.notes, grid] });\n  };\n\n  noteUpdate = () => {};\n\n  saveNotes = () => {\n    const obj = {\n      state: this.state.notes\n    }\n\n    API.saveNotes(obj).catch(err => console.log(err));\n  };\n\n  onDelete = (event) => {\n    const obj = {\n      note: event.id,\n      mongo: this.state._id\n    }\n\n    API.deleteNote(obj).catch((err) => console.log(err))\n  }\n\n  // NOTES //\n\n  // Watering Plant //\n\n  soil = () => {\n    API.isPlantDry().then(response => {\n      switch (response.data) {\n        case \"Plant is Dry, PLEASE WATER\":\n          this.setState({ soil: \"DRY\" });\n          this.waterPlant();\n          break;\n        case \"Plant is good, carry on\":\n          this.setState({ soil: \"WET\" });\n          break;\n        default:\n          this.setState({ soil: \"DRY\" });\n      }\n    });\n  };\n\n  waterPlant = () => {\n    API.waterPlant().catch(err => console.log(err));\n    this.soil();\n\n    const obj = {\n      title: \"Has Watered\"\n    };\n    \n    API.timeWatered(obj).catch(err => console.log(err));\n  };\n\n  getDates = () => {\n    API.getDates()\n      .then(({ data }) => {\n        const _Dates = [];\n        data.forEach(day => {\n          const num = moment(day.date).format(\"MM-DD-YYYY\");\n          _Dates.push(num);\n        });\n        this.setState({ dates: _Dates });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Watering Plant //\n\n\n  // Log Out //\n\n  logOut = () => {\n    fire.auth().signOut();\n  };\n\n  // Log Out //\n\n\n  render() {\n    let test = this.state.dates.length ? this.state.date.join(\"<br/>\") : \"\";\n    return (\n      <Container write={this.write}>\n        <Body\n          waterPlant={this.waterPlant}\n          logOut={this.logOut}\n          color={this.backgroundColor}\n          getDates={this.getDates}\n          true={test}\n          status={\n            this.state.soil === \"DRY\" ? (\n              <img\n                style={{ width: \"36px\" }}\n                onClick={() => this.waterPlant()}\n                className=\"status\"\n                src={dry}\n                alt=\"dry\"\n              />\n            ) : (\n              <i\n                onClick={() => this.waterPlant()}\n                className=\"fas fa-tint wet\"\n              />\n            )\n          }\n        />\n        <ReactStickies\n          id=\"stickies\"\n          notes={this.state.notes}\n          isDraggable={true}\n          isResizable={true}\n          onAdd={this.onAdd}\n          onChange={this.noteUpdate}\n          onDelete={this.onDelete}\n        />\n        <SketchField\n          width={window.innerWidth}\n          height={window.innerHeight}\n          tool={this.state.sketchTool}\n          lineColor=\"black\"\n          lineWidth={1}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default Home;","import React from \"react\";\nimport './style.css'\n\nexport function Logo(props) {\n  return <i style={props.color} className=\"fas fa-spa logo\"></i>\n}\n\nexport function Password(props) {\n  return <input type=\"password\" placeholder=\"Password\" {...props}/>\n}\n\nexport function Email(props) {\n  return <input type=\"email\" placeholder=\"Email\" {...props}/>\n}\n\nexport function Left(){\n  return (\n    <div className=\"split left\"></div>\n  );\n}\n\nexport function Right(props) {\n  return (\n    <div className=\"split right\">\n      <div className=\"centered\">{props.children}</div>\n    </div>\n  );\n}\n\nexport function Inside(props) {\n  return (\n    <div className=\"inside\">\n      <button id=\"login\" onClick={(event) => props.loginUser(event)}>Login</button>\n      <p onClick={(event) => props.signUp(event)} id=\"signup\">Sign Up</p>\n    </div>\n  )\n}","import React, { Component } from \"react\";\nimport fire from \"../config/fire\";\nimport {\n  Left,\n  Right,\n  Password,\n  Email,\n  Inside,\n  Logo\n} from \"../components/Login\";\n\nclass Login extends Component {\n  state = {\n    eml: \"\",\n    password: \"\",\n    invalidLogin: \"\"\n  };\n\n  signUp = event => {\n    event.preventDefault();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(this.state.eml, this.state.password)\n      .catch(err => console.log(err));\n  };\n\n  loginUser = event => {\n    event.preventDefault();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(this.state.eml, this.state.password)\n      .catch(err => {\n        this.setState({ invalidLogin: \"red\" });\n        console.log(err);\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Left />\n        <Right>\n          <Logo color={{ color: this.state.invalidLogin }} />\n\n          <Email\n            value={this.state.eml}\n            onChange={this.handleChange}\n            name=\"eml\"\n          />\n          <Password\n            value={this.state.password}\n            onChange={this.handleChange}\n            name=\"password\"\n          />\n\n          <Inside loginUser={this.loginUser} signUp={this.signUp} />\n        </Right>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport fire from \"./config/fire\";\n\nclass App extends Component {\n  state = {\n    user: {}\n  };\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n       <div className=\"App\">{this.state.user ? <Home /> : <Login />}</div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/overHeadPlant.172934c6.png\";","module.exports = __webpack_public_path__ + \"static/media/dry.9be3eeec.png\";"],"sourceRoot":""}